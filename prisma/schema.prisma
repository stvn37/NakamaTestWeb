// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Admin {
  id       String @id @default(cuid())
  username String @unique
  password String
}

model Menu {
  id         Int     @id @default(autoincrement())
  image      String
  categoryid Int
  title      String  @db.VarChar(255)
  caption    String?
  recommend  Boolean
  spicy      Boolean
  vege       Boolean
  available  Boolean @default(true)
  price      Float   @db.Float

  orderItems OrderItem[]
  category   Category    @relation(fields: [categoryid], references: [id])
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  menus Menu[]
}

model Feedback {
  id        Int    @id @default(autoincrement())
  firstName String
  lastName  String
  email     String
  subject   String
  message   String
}

model Order {
  id       Int        @id @default(autoincrement())
  uniqueid Int
  type     OrderType?
  tableNo  Int?
  finish   Boolean
  couponId Int?

  orderItems OrderItem[]
  coupon Coupon? @relation(fields: [couponId], references: [id], onDelete: Cascade)
}

enum OrderType {
  DineIn
  TakeAway
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  quantity Int

  orderId Int
  order   Order @relation(fields: [orderId], references: [id], onDelete: Cascade)

  menuId Int
  menu   Menu @relation(fields: [menuId], references: [id], onDelete: Cascade)

  @@unique([menuId, orderId])
}

model Coupon {
  id     Int     @id @default(autoincrement())
  code   String @unique
  discount Float
  active Boolean
  order Order[]
}
